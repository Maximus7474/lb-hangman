name: Create Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.RELEASE }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies and build UI
        run: |
          cd ui
          npm install
          npm run build

      - name: Update fxmanifest.lua version
        run: |
          NEW_VERSION="${GITHUB_REF#refs/tags/}"
          sed -i '/^version /c\version "'$NEW_VERSION'"' ./fxmanifest.lua

      - name: Commit updated fxmanifest.lua
        run: |
            git config --global user.name "github-actions[bot]"
            git config --global user.email "github-actions[bot]@users.noreply.github.com"
            git checkout -b main
            git add ./fxmanifest.lua
            git commit -m "chore(fxmanifest): bump version to $NEW_VERSION"
            git push origin main --force

      - name: Prepare files for release
        run: |
            # Create the release directory by copying everything except the release directory itself
            mkdir -p release
            shopt -s extglob  # Enable extended pattern matching
            cp -r !("release") ./release/  # Copy everything except the release directory
        
            # Remove unwanted directories and files from the release folder
            rm -rf ./release/.github
            rm -rf ./release/ui/src
            rm -rf ./release/ui/*  # Remove everything else from the ui folder in the release
            cp -r ./ui/dist ./release/ui/  # Copy only the dist folder back
            cp ./ui/icon.png ./release/ui/  # Copy the icon.png file

      - name: Create a zip file for the release
        run: |
          REPO_NAME=${GITHUB_REPOSITORY##*/}
          cd release
          zip -r "../${REPO_NAME}.zip" .

      - name: Where are my files currently ?
        run: |
          ls

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./lb-hangman.zip
          asset_name: lb-hangman.zip
          asset_content_type: application/zip
